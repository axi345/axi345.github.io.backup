{"meta":{"title":"Starmoon","subtitle":"","description":"","author":"赵星宇","url":"https://starmoon.space","root":"/"},"pages":[{"title":"about","date":"2021-03-20T08:07:57.000Z","updated":"2021-03-24T09:25:55.000Z","comments":true,"path":"about/index.html","permalink":"https://starmoon.space/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-03-20T08:12:20.000Z","updated":"2021-03-24T09:22:56.000Z","comments":true,"path":"categories/index.html","permalink":"https://starmoon.space/categories/index.html","excerpt":"","text":""},{"title":"books","date":"2021-03-20T08:12:36.000Z","updated":"2021-03-27T15:39:48.135Z","comments":true,"path":"books/index.html","permalink":"https://starmoon.space/books/index.html","excerpt":"","text":""},{"title":"movies","date":"2021-03-20T08:12:36.000Z","updated":"2021-03-27T11:57:54.296Z","comments":true,"path":"movies/index.html","permalink":"https://starmoon.space/movies/index.html","excerpt":"","text":""},{"title":"links","date":"2021-03-20T08:12:45.000Z","updated":"2021-03-24T09:24:16.000Z","comments":true,"path":"links/index.html","permalink":"https://starmoon.space/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-03-20T08:12:09.000Z","updated":"2021-03-24T09:22:24.000Z","comments":true,"path":"tags/index.html","permalink":"https://starmoon.space/tags/index.html","excerpt":"","text":""},{"title":"repository","date":"2021-03-20T08:12:29.000Z","updated":"2021-03-24T09:24:59.000Z","comments":true,"path":"repository/index.html","permalink":"https://starmoon.space/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"机器学习相关领域会议时间表","slug":"会议时间","date":"2099-12-31T04:00:00.000Z","updated":"2021-05-17T07:05:12.000Z","comments":true,"path":"2099/12/31/会议时间/","link":"","permalink":"https://starmoon.space/2099/12/31/%E4%BC%9A%E8%AE%AE%E6%97%B6%E9%97%B4/","excerpt":"","text":"注：仅供参考，以下均为北京时间 每年的时间线：IJCAI -&gt; ICML -&gt; KDD -&gt; SIGIR -&gt; ECCV (even) -&gt; ICCV (odd) -&gt; ACM MM -&gt; NeurIPS -&gt; AAAI -&gt; WWW -&gt; CVPR 会议名称 CCF 录用率 摘要提交ddl 全文提交ddl 补充材料ddl 第一阶段结果公布 rebuttal时间 结果公布时间 IJCAI 2021 A 13.9%(2021) 2021/1/14 19:59 2021/1/21 19:59 / 2021/2/8 19:59 2021/3/25 19:59-2021/3/29 19:59 2021/5/1 19:59 COLT 2021 B 30.9%(2020) / 2021/1/30 0:00 / / 2021/4/1 0:00 2021/5/15 0:00 ACL 2021 A 21.3%(2021) 2021/1/26 19:59 2021/2/3 19:59 / 2021/3/1 19:59 2021/3/26 19:59-2021/4/1 19:59 2021/5/6 19:59 ICML 2021 A 21.5%(2021) 2021/1/29 19:59 2021/2/5 19:59 2021/2/12 19:59 / 2021/3/21 15:00-2021/3/27 19:59 2021/5/8 15:00 KDD 2021 A 15.4%(2021) / 2021/2/9 19:59 / / / 2021/5/18 19:59 SIGIR 2021 A 21.0%(2021) 2021/2/3 19:59 2021/2/10 19:59 / / / 2021/4/15 19:59 UAI 2021 B 27.5%(2020) / 2021/2/21 8:00 / / 2021/4/15 8:00-2021/4/21 8:00- 2021/5/13 8:00 VLDB 2021 A 24.8%(2020) / 每月2日1:00 直到2021/3/2 / / / 下个月的16日 ICMR 2021 B 30.2%(2020) / 2021/3/4 16:00 / / / 2021/4/21 16:00 ECCV 2022 B 27.1%(2020) 2022/3(TBD) 2022/3(TBD) 2022/3(TBD) / 2022/5(TBD) 2022/7(TBD) ICCV 2021 A 25.0%(2019) 2021/3/11 15:00 2021/3/18 15:00 2021/3/25 15:00 / 2021/6/11 15:00-2021/6/18 15:00 2021/7/23 15:00 KR 2021 B 26.4%(2014) 2021/3/25 19:59 2021/4/1 19:59 / / 2021/5/25 19:59-2021/5/27 19:59 2021/6/16 19:59 ECML/PKDD 2021 B 19.1%(2020) 2021/3/27 19:59 2021/4/3 19:59 / / / 2021/6/19 19:59 ACM MM 2021 A 27.9%(2020) 2021/4/11 19:59 2021/4/18 19:59 / / 2021/5/26 19:59-2021/6/2 19:59 2021/7/4 19:59 ICPR 2022 C 43.4%(2020) / 2022/5(TBD) / / / 2022/7(TBD) RecSys 2021 17.9%(2020) 2021/4/28 19:59 2021/5/5 19:59 / / 2021/6/23 19:59-2021/6/27 19:59 2021/7/7 19:59 EMNLP 2021 B 22.4%(2020) 2021/5/11 19:59 2021/5/18 19:59 / / 2021/7/12 19:59-2021/7/18 19:59 2021/8/26 19:59 PRICAI 2021 C 41.9%(2019) / 2021/5/23 / / / 2021/7/31 NeurIPS 2021 A 20.1%(2020) 2021/5/22 4:00 2021/5/29 4:00 2021/6/5 4:00 / 2021/8/4 4:00 2021/9/29 4:00 CIKM 2021 B 21.0%(2020) 2021/5/20 19:59 2021/5/27 19:59 / / / 2021/8/10 19:59 WACV 2022 34.5%(2020) / 2021/6/3 19:59 &amp; 2021/8/12 19:59 / / / / ICDM 2021 B 9.8%(2020) / 2021/6/12 14:59 / / / 2021/9/1 14:59 BMVC 2021 C 28.3%(2019) 2021/6/18 2021/6/25 / / / / ICDE 2022 A 22.7%(2020) 2021/6(TBD)&amp; 2021/10(TBD) 2021/6(TBD)&amp; 2021/10(TBD) / / 2021/8(TBD)&amp; 2021/12(TBD) 2021/10(TBD)&amp; 2022/2(TBD) PODS 2022 B 33%(2019) 2021/6/11&amp; 2021/12/10 2021/6/18&amp; 2021/12/17 / / 2021/8/1-2021/8/5 2021/8/13&amp; 2022/2/28 ACML 2021 C 28.4%(2020) / 2021/6/26 15:00 / / 2021/8/12 15:00-2021/8/26 15:00 2021/9/4 15:00 COLING 2022 B 33.4%(2020) / 2022/7(TBD) / / / 2022/10(TBD) SIGMOD 2022 A 26.9%(2020) / 2021/7(TBD)&amp; 2021/10(TBD) / / 2021/9(TBD)&amp; 2021/12(TBD) 2021/10(TBD)&amp; 2021/1(TBD) WSDM 2022 B 18.6%(2021) / 2021/8/9 19:59 / / / 2021/10/11 19:59 AAAI 2022 A 21.4%(2021) 2021/9(TBD) 2021/9(TBD) 2021/9(TBD) 2021/10(TBD) 2021/11(TBD) 2021/12(TBD) ICLR 2022 28.7%(2021) 2021/9(TBD) 2021/10(TBD) 2021/12(TBD) / 2021/11(TBD) 2022/1(TBD) SDM 2022 B 22.7%(2019) / 2021/10(TBD) / / / 2021/12(TBD) AISTATS 2022 C 29.8%(2021) 2021/10(TBD) 2021/10(TBD) 2021/10(TBD) / 2021/11(TBD) 2022/1(TBD) WWW 2022 A 20.6%(2021) 2021/10(TBD) 2021/10(TBD) / / 2021/12(TBD) 2022/1(TBD) NAACL 2022 C 26.3%(2019) / 2021/11(TBD) / / 2022/1(TBD) 2022/3(TBD) ECAI 2022 B 25%(2020) 2021/11(TBD) 2021/11(TBD) / / 2021/12(TBD) 2021/1(TBD) CVPR 2022 A 23.7%(2021) 2021/11(TBD) 2021/11(TBD) 2021/11(TBD) / 2022/1(TBD) 2022/3(TBD) PAKDD 2022 C 21.5%(2020) 2021/11(TBD) 2021/11(TBD) / / / 2022/2(TBD) ICME 2022 B 30%(2020) / 2021/12(TBD) / / / 2021/3(TBD) 时区换算： DT：每年3月的第2个星期六2:00AM-11月的第1个星期日2:00AM ST：其他时间 EDT = UTC-4 EST = UTC-5 CDT = UTC-5 CST = UTC-6 MDT = UTC-6 MST = UTC-7 PDT = UTC-7（太平洋时间） PST = UTC-8（太平洋时间） AKDT = UTC-8 AKST = UTC-9 HDT = UTC-9 HST = UTC-10 AoE (Anywhere on Earth) = UTC-12 GMT = UTC+0 北京时间：UTC+8","categories":[{"name":"机器学习","slug":"机器学习","permalink":"https://starmoon.space/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"机器学习会议","slug":"机器学习会议","permalink":"https://starmoon.space/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BC%9A%E8%AE%AE/"}]},{"title":"写作词汇","slug":"写作词汇","date":"2099-12-30T16:00:00.000Z","updated":"2021-04-21T05:33:23.000Z","comments":true,"path":"2099/12/31/写作词汇/","link":"","permalink":"https://starmoon.space/2099/12/31/%E5%86%99%E4%BD%9C%E8%AF%8D%E6%B1%87/","excerpt":"","text":"英文 中文 intermediate features 中间特征 for simplicity 简单起见 be distinct from 与…不同 shortlisted labels 入围标记 This phenomenon is confirmed in experiments 这一现象在实验中得到了证实","categories":[{"name":"论文写作","slug":"论文写作","permalink":"https://starmoon.space/categories/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"}],"tags":[{"name":"论文写作","slug":"论文写作","permalink":"https://starmoon.space/tags/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"}]},{"title":"pyxclib库使用方法","slug":"pyxclib库使用方法","date":"2021-04-15T05:00:00.000Z","updated":"2021-04-15T07:03:19.000Z","comments":true,"path":"2021/04/15/pyxclib库使用方法/","link":"","permalink":"https://starmoon.space/2021/04/15/pyxclib%E5%BA%93%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","excerpt":"","text":"说明极限多标记分类问题的工具。安装方式（shell中输入）： 123git clone https://github.com/kunaldahiya/pyxclib.gitcd pyxclibpython3 setup.py install --user","categories":[{"name":"机器学习","slug":"机器学习","permalink":"https://starmoon.space/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://starmoon.space/tags/Python/"}]},{"title":"Python爬虫入门","slug":"爬虫入门","date":"2021-03-31T07:40:00.000Z","updated":"2021-04-04T06:20:13.000Z","comments":true,"path":"2021/03/31/爬虫入门/","link":"","permalink":"https://starmoon.space/2021/03/31/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/","excerpt":"","text":"获取并打印网址内容（基于urllib） 1234from urllib.request import urlopen html = urlopen(&quot;http://www.baidu.com/&quot;)html_text = bytes.decode(html.read())print(html_text) 解析网页 12from bs4 import BeautifulSoupobj = BeautifulSoup(html.read().decode(&#x27;utf-8&#x27;),features=&#x27;html.parser&#x27;) 获取网页元素 123# 获取网页标题元素并打印title = obj.head.titleprint(title) 查找网页信息 1234# 查找全部图片信息并输出pic_info = obj.find_all(&#x27;img&#x27;)for i in pic_info: print(i) 提取logo图片地址 1234# 类是index-logo-src，属性是srclogo_pic_info = obj.find_all(&#x27;img&#x27;, class_=&quot;index-logo-src&quot;)logo_url = &quot;http:&quot; + logo_pic_info[0][&#x27;src&#x27;]print(logo_url) 下载数据到本地 12from urllib.request import urlretrieveurlretrieve(logo_url, &#x27;logo.png&#x27;) 转换网址中的中文 1234from urllib.parse import quoteimport stringurl = &#x27;http://网址&#x27;url = quote(url, safe=string.printable) 获取并打印网址内容（基于request） 123import requests html = requests.get(&quot;http://www.baidu.com/&quot;)print(html.text) 解析并获取网页内容 12345from bs4 import BeautifulSouphtml.encoding = &#x27;utf-8&#x27;obj = BeautifulSoup(html.text,features=&#x27;lxml&#x27;)title = obj.head.titleprint(title) requests post请求 12345import requests# key为&lt;form&gt;中&lt;input&gt;里面name的值data = &#123;&#x27;key1 in Form Data&#x27;: &#x27;value1&#x27;, &#x27;key 2 in Form Data&#x27;: &#x27;value2&#x27;&#125;r = requests.post(html, data=data)print(r.text) requests 上传图片 1234import requestsfile = &#123;&#x27;key value&#x27;: open(&#x27;./image.png&#x27;, &#x27;rb&#x27;)&#125;r = requests.post(html, files=file)print(r.text) requests 模拟登录（使用cookie） 12345import requestslogin = &#123;&#x27;username&#x27;: &#x27;xxx&#x27;, &#x27;password&#x27;: &#x27;xxx&#x27;&#125;r = requests.post(html1, data=login)r = requests.get(html2, cookies=r.cookies)print(r.text) requests 模拟登录（使用session） 123456import requestssession = requests.Session()login = &#123;&#x27;username&#x27;: &#x27;xxx&#x27;, &#x27;password&#x27;: &#x27;xxx&#x27;&#125;r = session.post(html1, data=login)r = session.get(html2)print(r.text) requests 下载数据 12345import requestsr = requests.get(img_url, stream=True) # stream loadingwith open(&#x27;./img.png&#x27;, &#x27;wb&#x27;) as f: for chunk in r.iter_content(chunk_size=32): f.write(chunk)","categories":[{"name":"编程语言","slug":"编程语言","permalink":"https://starmoon.space/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://starmoon.space/tags/Python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://starmoon.space/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"LaTeX技巧","slug":"LaTeX技巧","date":"2021-03-30T16:16:00.000Z","updated":"2021-05-14T14:32:32.343Z","comments":true,"path":"2021/03/31/LaTeX技巧/","link":"","permalink":"https://starmoon.space/2021/03/31/LaTeX%E6%8A%80%E5%B7%A7/","excerpt":"","text":"字号设置从小到大依次为： 12345678910\\tiny\\scriptsize\\footnotesize\\small\\normalsize\\large\\Large\\LARGE\\huge\\Huge 直接设置字号 1\\fontsize&#123;9.85pt&#125;&#123;\\baselineskip&#125;\\selectfont 字体颜色设置12\\usepackage&#123;color&#125; %这句加在导言区&#123;\\color&#123;red&#125;内容&#125; 去除表格中的空白1234567\\begin&#123;table&#125;[htbp] \\setlength&#123;\\tabcolsep&#125;&#123;1.5mm&#125; %通过这句来控制格式 \\centering \\begin&#123;tabular&#125; 表格内容 \\end&#123;tabular&#125;\\end&#123;table&#125; 调整Excel2LaTeX生成的表格1234567891011121314151617181920212223with open(&#x27;do.txt&#x27;) as file: with open(&#x27;done.txt&#x27;,&#x27;w&#x27;) as file1: while True: raw = file.readline() if raw: raw = raw.replace(&#x27;\\\\cmidrule&#x27;, &#x27;\\\\cline&#x27;) raw = raw.replace(&#x27;\\\\toprule&#x27;, &#x27;\\\\hline&#x27;) raw = raw.replace(&#x27;\\\\midrule&#x27;, &#x27;\\\\hline&#x27;) raw = raw.replace(&#x27;\\\\bottomrule&#x27;, &#x27;\\\\hline&#x27;) if &#x27;\\\\multirow&#x27; in raw: raw = raw.split(&#x27;\\\\&#x27;) for i in range(len(raw)): if &#x27;multirow&#x27; in raw[i]: r = raw[i] r = r.split(&#x27;&#125;&#x27;) r[0]=r[0].replace(&#x27;multirow&#x27;,&#x27;multirowcell&#x27;) r.pop(1) r = &#x27;&#125;&#x27;.join(r) raw[i] = r raw = &#x27;\\\\&#x27;.join(raw) file1.write(raw) else: break 注意：修改后要在latex导言区加入以下package： 1\\usepackage&#123;multirow,makecell&#125;","categories":[{"name":"论文写作","slug":"论文写作","permalink":"https://starmoon.space/categories/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"}],"tags":[{"name":"LaTeX","slug":"LaTeX","permalink":"https://starmoon.space/tags/LaTeX/"}]},{"title":"Python正则表达式笔记","slug":"Python正则表达式笔记","date":"2021-03-25T08:56:22.000Z","updated":"2021-05-09T10:15:05.150Z","comments":true,"path":"2021/03/25/Python正则表达式笔记/","link":"","permalink":"https://starmoon.space/2021/03/25/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%AC%94%E8%AE%B0/","excerpt":"","text":"匹配类型 特殊匹配类型 含义 \\d 任何数字 \\D 不是数字 \\s 任何 white space, 如 [\\t\\n\\r\\f\\v] \\S 不是 white space \\w 任何大小写字母, 数字和 _ [a-zA-Z0-9_] \\W 不是 \\w \\b 空白字符 (只在某个字的开头或结尾) \\B 空白字符 (不在某个字的开头或结尾) \\ 匹配 \\ . 匹配任何字符 (除了 \\n) ^ 匹配开头 $ 匹配结尾 ? 前面的字符可有可无 * 匹配前一个字符一次或无限次 + 匹配前一个字符一次或无限次 {m} 匹配前一个字符m次 {m,n} 匹配前一个字符m至n次。若省略m。则m=0.若省略n，则n=无限。 几个例子 re.compile(strPattern[, flag]) 用于将字符串形式的正则表达式编译为Pattern对象。第二个参数flag是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如re.I | re.M。 re.I(re.IGNORECASE): 忽略大小写（括号内是完整写法，下同） re.M(re.MULTILINE): 多行模式，改变’^’和’$’的行为（参见上图） re.S(re.DOTALL): 点任意匹配模式，改变’.’的行为 re.L(re.LOCALE): 使预定字符类 \\w \\W \\b \\B \\s \\S 取决于当前区域设定 re.U(re.UNICODE): 使预定字符类 \\w \\W \\b \\B \\s \\S \\d \\D 取决于unicode定义的字符属性 re.X(re.VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。 re.match(pattern, string) 这个方法将从string起始处起尝试匹配pattern；如果pattern结束时仍可匹配，则返回一个Match对象；如果匹配过程中pattern无法匹配，或者匹配未结束就已到达endpos，则返回None。 1234567import repattern1 = re.compile(r&quot;dog&quot;)pattern2 = re.compile(r&quot;cat&quot;)string = &quot;dog runs to cat&quot;print(re.match(pattern1, string)) # &lt;_sre.SRE_Match object; span=(0, 3), match=&#x27;dog&#x27;&gt;print(re.match(pattern2, string)) # None re.search(pattern, string) 这个方法用于查找字符串中可以匹配成功的子串。。从string的起始处起尝试匹配pattern，如果pattern结束时仍可匹配，则返回一个Match对象；若无法匹配，则将pos加1后重新尝试匹配；直到pos=endpos时仍无法匹配则返回None。 12345678import repattern1 = re.compile(r&quot;cat&quot;)pattern2 = re.compile(r&quot;bird&quot;)string = &quot;dog runs to cat&quot;print(re.search(pattern1, string)) # &lt;_sre.SRE_Match object; span=(12, 15), match=&#x27;cat&#x27;&gt;print(re.search(pattern1, string)[0]) # catprint(re.search(pattern2, string)) # None re.split(pattern, string) 按照能够匹配的子串将string分割后返回列表。 1234567import repattern1 = re.compile(r&quot;runs&quot;)pattern2 = re.compile(r&quot;bird&quot;)string = &quot;dog runs to cat&quot;print(re.split(pattern1, string)) # [&#x27;dog &#x27;, &#x27; to cat&#x27;]print(re.split(pattern2, string)) # [&#x27;dog runs to cat&#x27;] re.findall(pattern, string) 搜索string，以列表形式返回全部能匹配的子串。 1234567import repattern1 = re.compile(r&quot;o\\w+&quot;)pattern2 = re.compile(r&quot;bird&quot;)string = &quot;dog runs to dog&quot;print(re.findall(pattern1, string)) # [&#x27;og&#x27;, &#x27;og&#x27;]print(re.findall(pattern2, string)) # [] re.finditer(pattern, string) 搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。 1234567import repattern1 = re.compile(r&quot;o\\w+&quot;)pattern2 = re.compile(r&quot;bird&quot;)string = &quot;dog runs to dog&quot;print(list(re.finditer(pattern1, string))) # [&lt;_sre.SRE_Match object; span=(1, 3), match=&#x27;og&#x27;&gt;, &lt;_sre.SRE_Match object; span=(13, 15), match=&#x27;og&#x27;&gt;]print(list(re.finditer(pattern2, string))) # [] re.sub(pattern, repl, string) 使用repl替换string中每一个匹配的子串后返回替换后的字符串。 123456789import repattern1 = re.compile(r&quot;cat&quot;)pattern2 = re.compile(r&quot;bird&quot;)string = &quot;dog runs to cat cat&quot;print(re.sub(pattern1, &#x27;me&#x27;, string)) # dog runs to me meprint(re.sub(pattern2, &#x27;me&#x27;, string)) # dog runs to cat cat re.sub(pattern, repl, string) 使用repl替换string中每一个匹配的子串后返回替换后的字符串。 \\g&lt;1&gt; 代表前面pattern里面第一个分组，可以简写为\\1，\\g&lt;0&gt;代表前面pattern匹配到的所有字符串。 图片出处","categories":[{"name":"编程语言","slug":"编程语言","permalink":"https://starmoon.space/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://starmoon.space/tags/Python/"}]},{"title":"Python人工智能库ailearn使用说明0.1.8","slug":"Python人工智能库ailearn使用说明0-1-8","date":"2018-04-18T11:30:00.000Z","updated":"2021-03-24T15:49:14.394Z","comments":true,"path":"2018/04/18/Python人工智能库ailearn使用说明0-1-8/","link":"","permalink":"https://starmoon.space/2018/04/18/Python%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%BA%93ailearn%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E0-1-8/","excerpt":"","text":"说明：ailearn是一个人工智能算法包。包含了粒子群算法、人工鱼群算法、萤火虫算法、进化策略、强化学习等多种人工智能算法的实现。 1.项目网址ailearn的项目网址在下面的图片上： 看这个小猫，多萌啊O(∩_∩)O好了，话不多说，我们接下来马上对ailearn进行介绍！ 2.安装和更新安装方式很简单，Linux和Mac用户在终端中、Windows用户在cmd窗口中输入以下语句： 1pip install ailearn 依赖库为numpy和pandas。但是不用管这些，如果没有安装它们，计算机会自动帮你完成这些库的安装。而更新只要在终端中输入下面一行代码： 1pip install ailearn --upgrade 简单吧！ 3.基础操作使用ailearn的方式非常简单，比如我们要使用粒子群算法寻找使函数 取得最小值时的 和 ，只需定义一个方程（因为是取得极小值，所以要加一个负号表示函数越小结果越好）： 12def func(x, y): return -(x ** 2 + y ** 2) 然后调用ailearn集成的粒子群算法进行寻优： 12345from ailearn.Swarm import PSOp = PSO(func=func, param_len=2, x_min=[-5, -5], x_max=[5, 5])x, y = p.solve()print(x, y) 在**p = PSO(func=func, param_len=2, x_min=[-5, -5], x_max=[5, 5])**这一句当中，func表示待优化的函数，param_len代表参数个数，x_min表示待优化参数的下界，x_max代表待优化参数的上界。对于x_min与x_max而言，如果各个参数的下界或上界是一致的，则可以简写成一个数字。例如上面的第二行代码，可以简写成： 1p = PSO(func=func, param_len=2, x_min=-5, x_max=5) 最后找到的结果已经很接近于0了： 1-0.0015879250803923634 0.0007797339214444029 另外，在上面的第三行代码x,y=p.solve()中，还可以通过solve()函数的参数控制迭代次数和是否实时输出当前最优值。例如，我们可以把迭代次数设置为20次，并实时打印当前最优结果： 1x, y = p.solve(epoch=20, verbose=True) 则输出的结果为： 123456789101112131415161718192021已完成第1次寻找,最优参数值为 [-1.23618084 -1.39514355] 目前最优适合度为-3.4746已完成第2次寻找,最优参数值为 [-1.23618084 -1.39514355] 目前最优适合度为-3.4746已完成第3次寻找,最优参数值为 [-1.0435181 -1.21133809] 目前最优适合度为-2.5563已完成第4次寻找,最优参数值为 [-0.5935181 -0.9070398] 目前最优适合度为-1.1750已完成第5次寻找,最优参数值为 [-0.1885181 -0.63317134] 目前最优适合度为-0.4364已完成第6次寻找,最优参数值为 [ 0.1759819 -0.38668973] 目前最优适合度为-0.1805已完成第7次寻找,最优参数值为 [ 0.1759819 -0.38668973] 目前最优适合度为-0.1805已完成第8次寻找,最优参数值为 [ 0.1759819 -0.38668973] 目前最优适合度为-0.1805已完成第9次寻找,最优参数值为 [ 0.07364577 -0.13585497] 目前最优适合度为-0.0239已完成第10次寻找,最优参数值为 [-0.14273468 -0.05481245] 目前最优适合度为-0.0234已完成第11次寻找,最优参数值为 [-0.14273468 -0.05481245] 目前最优适合度为-0.0234已完成第12次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第13次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第14次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第15次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第16次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第17次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第18次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第19次寻找,最优参数值为 [-0.09273468 -0.00481245] 目前最优适合度为-0.0086已完成第20次寻找,最优参数值为 [-0.08161265 0.00630957] 目前最优适合度为-0.0067-0.08161265187640543 0.006309573062982521 此外，我们还可以对PSO算法中的参数进行调节。关于PSO算法的参数，不太了解的同学可以看这篇文章： 粒子群算法详解 - CSDN博客blog.csdn.net 这篇文章对PSO算法讲解的很好，同时给出了PSO算法的matlab及Java实现。 ailearn.Swarm中还包括人工鱼群算法（AFSA）以及萤火虫算法（FA）的实现，调用方法与PSO算法类似。不了解人工鱼群算法以及萤火虫算法算法的童鞋可以阅读以下两篇文章： 人工鱼群算法详解 - CSDN博客blog.csdn.net萤火虫算法详解 - CSDN博客blog.csdn.net 满满的都是干货。 另外，ailearn还集成了一些常用的智能算法的测试函数。比如Ackley函数，其定义如下： 这个函数在 处取得极小值 。假设参数的维度为5，则我们可以通过下面的代码对其进行优化： 1234567from ailearn.Evaluation import Ackleyfrom ailearn.Swarm import PSOf = Ackley()p = PSO(func=f.func, param_len=5, x_min=f.min, x_max=f.max)x = p.solve()print(x) 参数维数的指定在p = PSO(func=f.func, param_len=5, x_min=f.min, x_max=f.max)这一句当中。param_len=5表示参数的维度为5，而x_min=f.min, x_max=f.max表示参数的取值范围为Ackley函数的定义域[f.min,f.max]。最后的结果会因为一系列的原因（如参数的初始位置、初始速度设置等）有所不同。我们这次运行的结果为： 1[-0.00267134 -0.01558313 -0.0162821 -0.00999858 0.01572605] 效果还是不错的。 4.与其他机器学习库的配合使用除了上面的简单应用，ailearn还可以与其他机器学习外部库配合，进行一些超参数的寻优。说到机器学习，就不得不提sklearn这个库，这个库集成了KNN、朴素贝叶斯、支持向量机、神经网络、决策树、随机森林等若干机器学习算法，调用起来也是非常方便。在机器学习领域，超参数的选定具有重要的意义，可能直接决定了算法训练的效果。而ailearn可以完美的与sklearn配合，进行超参数的寻优。 比如，我们想要利用sklearn中的SVM算法对iris数据集进行分类，可以首先输入以下语句： 123456from sklearn.datasets import load_irisfrom sklearn.model_selection import train_test_splitdata = load_iris()x_train, x_test, y_train, y_test = train_test_split(data.data, data.target, shuffle=True, stratify=data.target, test_size=0.5, random_state=1) 这几行代码主要完成了iris数据集的引入、并且对iris数据集进行分层随机采样，划分50%的数据作为训练集、50%的数据作为测试集。 接下来对SVM进行训练，并打印出训练效果（准确率）： 12345from sklearn.svm import SVCmodel = SVC()model.fit(x_train, y_train)print(model.score(x_test, y_test)) 得到了此时的训练准确率： 10.9733333333333334 这个准确率看似很高，但对于iris这种简单的数据集而言，还是不够的。接下来我们对svm的超参数进行优化。在使用高斯核时，svm的超参数主要有C和gamma。我们设定C的范围为0到5，gamma的范围为0到1。为了防止算法执行时参数变化过大，我们把C的最大变化速度设置为0.25，gamma变化的最大速度设置为0.05。则可以用下面的代码进行超参数的优化： 123456789from ailearn.Swarm import PSOdef svm_score(C, gamma): model = SVC(C=C, gamma=gamma) model.fit(x_train, y_train) return model.score(x_test, y_test)p = PSO(svm_score, 2, x_min=[0, 0], x_max=[5, 1], v_min=[-0.25, -0.05], v_max=[0.25, 0.05])C, gamma = p.solve() 运行以上代码，我们便找到了在当前条件下的最优C和gamma值。接下来我们看一下最优的C和gamma值，以及他们对应的score： 12print(&#x27;C=&#x27;, C, &#x27;gamma=&#x27;, gamma)print(svm_score(C, gamma)) 结果为： 12C= 4.208290021821946 gamma= 0.356470951048720560.9866666666666667 较刚才有了一定提高。 5.强化学习模块强化学习模块是0.1.8版本新加入的模块，目前实现了几种经典的强化学习算法：Q学习、Sarsa、Q(λ)、Sarsa(λ)和Dyna-Q，并且集成了三种经典的测试环境：CliffWalking环境、FrozenLake环境与GridWorld环境。利用ailearn，我们可以轻松地创建一个强化学习agent： 12345from ailearn.RL.Environment import FrozenLakefrom ailearn.RL.TabularRL import QLearningenv = FrozenLake(4)agent = QLearning(n_actions=env.n_actions, n_states=env.n_states) 其中，env = FrozenLake(4)代表我们创建了一个4*4的FrozenLake环境，而接下来的agent = QLearning(n_actions=env.n_actions, n_states=env.n_states)这一句创建了一个利用Q学习算法进行学习的强化学习agent。 我们可以利用下面的语句进行强化学习agent的训练，使agent掌握能够快速通过冰湖的方法： 123456789for episode in range(50): s = env.reset() while True: a = agent.choose_action(s) s_, r, done, _ = env.step(a) agent.learn(s, a, r, s_, done) s = s_ if done: break 上面的代码快速地实现了Q学习算法。如果大家对强化学习不是很了解，建议看一下这个网站： 强化学习 Reinforcement Learning 教程系列 | 莫烦Pythonmorvanzhou.github.io 莫烦的教程还是非常的浅显易懂，能够完美的完成从入门到精通。 当前ailearn的强化学习模块还不是很完善，仅仅包括了一些传统的强化学习算法。我们计划在接下来的几个版本当中，逐步增加强化学习模块的内容，添加一些新的环境，以及一些最新的深度强化学习算法，来供大家更好地学习和使用。 6.结束语（拉票时间）ailearn作为一个全新的项目，还有许多不完善和待优化的地方。如果ailearn帮助到大家了，欢迎大家积极star和fork，如果有什么好的建议也可以向我们提出来，我们会对ailearn进行进一步完善，使它能够适应大家的使用需求^_^","categories":[{"name":"机器学习","slug":"机器学习","permalink":"https://starmoon.space/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"机器学习库","slug":"机器学习库","permalink":"https://starmoon.space/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%BA%93/"}]},{"title":"彭城怀项羽","slug":"彭城怀项羽","date":"2013-03-03T12:30:00.000Z","updated":"2021-03-24T12:36:29.000Z","comments":true,"path":"2013/03/03/彭城怀项羽/","link":"","permalink":"https://starmoon.space/2013/03/03/%E5%BD%AD%E5%9F%8E%E6%80%80%E9%A1%B9%E7%BE%BD/","excerpt":"","text":"东华通衢，四省要冲。 河水故道，隐许若成。 黄淮上下，络绎交通。 晴雨未常，旧日遗梦。 &nbsp; 战国乱世，秦皇一统。 千年世制，万念其功。 南服蛮夷，北筑长城。 征夫都逸，天下必动。 &nbsp; 起于乱世，西楚称雄。 协力天下，破秦关中。 鸿门盛宴，义极遂静。 大气凛然，楚汉相争。 &nbsp; 天之造势，谁人能动？ 旷世气概，专断独横。 山河尽失，快战难平。 乌江饮恨，后世叹情。 &nbsp; 孤寂寒风，鸟鸣莺莺。 荒芜郊野，陵建东平。 风轻明月，夜雨流星， 流江怒涛，未曾不鸣。 &nbsp; 风之轻兮，在于物动。 月之高兮，在于云定。 江之流兮，在广在速； 涛之怒兮，在碧在丰！ &nbsp; 义之遇诈，何以得胜？ 彭城西楚，霸气何从？ 广纳贤才，不与天争。 豪气不复，万世谨明。 &nbsp; 2013年3月3日夜于江苏徐州","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://starmoon.space/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"诗歌","slug":"诗歌","permalink":"https://starmoon.space/tags/%E8%AF%97%E6%AD%8C/"}]},{"title":"自然赞","slug":"自然赞","date":"2010-11-04T13:30:00.000Z","updated":"2021-03-24T12:47:29.000Z","comments":true,"path":"2010/11/04/自然赞/","link":"","permalink":"https://starmoon.space/2010/11/04/%E8%87%AA%E7%84%B6%E8%B5%9E/","excerpt":"","text":"严冬欲趋暖，暖日未成颜。 山来青似坚，雾升青云间。 空寂辟幽径，独自登云山。 感此为心切，故作雨中闲。 搭营帐露天，乃支动辄辕。 不感身何在，独尊大自然。 &nbsp; 水天波澜连欲连，山高云涌天外天。 飞鸟忽从山外出，密林坡下径皆欢。 归林落木凡不在，冬已不复春才还。 欲与天公独坐谈，唯谈天下万事间。 风吹先行散，水漫才空看。 山南水北，阴阳寸土，化作一渊山清泉。 自然多自然，风足有余年。 &nbsp; 宴罢回归凡世间，故事如烟气自散。 越史今为永向前，何似云归在今天？ 惟有隐者获乐远，惟有志士见恨晚。 今生永世赞自然，烟柳繁喧拟人间。 &nbsp; 2010年11月4日夜于河北廊坊","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://starmoon.space/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"诗歌","slug":"诗歌","permalink":"https://starmoon.space/tags/%E8%AF%97%E6%AD%8C/"}]},{"title":"观空感","slug":"观空感","date":"2010-10-25T12:30:00.000Z","updated":"2021-03-24T12:47:40.000Z","comments":true,"path":"2010/10/25/观空感/","link":"","permalink":"https://starmoon.space/2010/10/25/%E8%A7%82%E7%A9%BA%E6%84%9F/","excerpt":"","text":"点点荧光，看淡天下风云会于此。 迟迟钟鼓，诉尽人间喜怒哀乐事。 天鸡报晓霜未重，重登太行心不冷。 垂钓碧溪有闲情，马嵬叙旧山难横。 风声水起天即高，铁马繁世千樽望。 即邀天下会于此，莫笑风声无断时。 天高云淡，但有点点萤火； 气宇人喧，岂忘席席烟光？ 人非圣贤之辈，水消洁净之渠。 何妨抬头瞻横天，气贯银河上九千。 横带天公遮望月，人定长嗟永向前。 一览天际绝无断，流如中华五千年。 年归秋日此时现，现时秋雨当春看。 念天光犹是时，望京都于北顾。 江起云涌，千龙腾跃。欲与风声，一争仙雀。 莫辞此生在虚行，看淡人生犹先声。 即望天姿一线牵，云影海日在一边。 再眺海日天高远，海深何及天外天？ 恐及探此犹如此，岂效人生有竟时。 回首即非当前事，时耽及误天下事。 会当千帆万竞时，海外独唱天涯赐。 即舟犹是向前至。 贯虹天下风云五千载，何似夜栏观空时？ &nbsp; 2010年10月25日夜于河北廊坊","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://starmoon.space/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"诗歌","slug":"诗歌","permalink":"https://starmoon.space/tags/%E8%AF%97%E6%AD%8C/"}]},{"title":"20世纪的战争与和平","slug":"20世纪的战争与和平","date":"2010-06-06T09:00:00.000Z","updated":"2021-03-24T12:40:07.000Z","comments":true,"path":"2010/06/06/20世纪的战争与和平/","link":"","permalink":"https://starmoon.space/2010/06/06/20%E4%B8%96%E7%BA%AA%E7%9A%84%E6%88%98%E4%BA%89%E4%B8%8E%E5%92%8C%E5%B9%B3/","excerpt":"","text":"注：本文时间线为本人于2010年6月阅读人教版历史选修三《20世纪的战争与和平》所做的笔记，仅供参考。 历史时间表1912年秋 第一次巴尔干战争。奥斯曼帝国战败，丧失在欧洲绝大部分领土。 1913年 第二次巴尔干战争。保加利亚战败。 1914年6月28日 萨拉热窝事件爆发，普林西普刺杀斐迪南大公。 1914年9月5日 马恩河战役。英法和德军共投入152万人。它宣告德国“速战速决”计划破产。 1916年2月 凡尔登战役爆发。此次战役持续10个月，双方死伤70多万人。被喻为“凡尔登绞肉机”。 1916年5月 一战中英德间最大规模海战——日德兰海战爆发。本次海战被喻为“大炮巨舰的高峰”。 1916年下旬 索姆河战役爆发。此次战役持续到11月中旬，双方死伤130多万人，是一战中最大规模的战役，被喻为“索姆河地狱”。 1917年11月2日 英国外交大臣贝尔福发表“贝尔福宣言”，表示支持犹太人在巴勒斯坦复国。 1918年9月底 协约国开始突破德国“兴登堡防线”。至10月初，已完全突破该防线。 1918年11月 德国爆发“十一月革命”，推翻了帝制。 1918年11月11日 一战停战协议签订。 1919年1月18日 巴黎和会在凡尔赛宫开幕。有27个国家与会。 1919年4月28日 国联盟约通过，国联总部设在日内瓦万国宫。会员国开始有23个，后来发展到42个。 1919年6月24日 《协约各国和参加国对德和约》签订。 1919年9月11日 《协约各国和参加国对奥和约》（《圣日耳曼条约》）签订。 1919年11月27日 《协约各国和参加国对保和约》（《纳伊条约》）签订。 1920年6月4日 《协约各国和参加国对匈和约》（《特里亚农条约》）签订。 1920年8月10日 协约国与土耳其素丹政府签订《色佛尔条约》。 1921年 英国以约旦河为界，把巴勒斯坦一分为二，西部仍称巴勒斯坦，东部建立外约旦酋长国。 1921年11月12日 美英日法《四国条约》签订。 1922年2月 美英日法意《五国条约》签订，这是世界现代史上的第一个裁军协议。 1922年2月 中日《解决山东问题悬案条约》及其《附属条约》签订。美英日法意葡荷比中《九国公约》签订，又使中国回到了几个帝国主义国家共同支配的局面。 1922年4月 意大利召开热那亚国际经济会议，其中苏德签订了《拉巴洛条约》。 1922年10月 以墨索里尼为首的法西斯党在意大利上台，建立起第一个法西斯政权的国家。 1923年2月24日 协约国与土耳其凯末尔政府签订《洛桑条约》，表明土耳其维护了国家独立。 1924年 国际联盟签订了《日内瓦协议书》。 1925年10月 德法比英意签订《互相保证公约》，德国与法比分别签订了《裁军协议》。这些共同构成了《洛迦诺公约》。 1928年8月 美德法比英意等十五国在巴黎签订《非战公约》，规定了以和平方式解决国际争端或冲突的原则。1933年共有60多个国家加入。 1929年10月24日 美国股市崩溃，史称“黑色的十月”。 1931年 西班牙成立共和国。 1932年 纳粹成为德国国会第一大党。 1933年1月 希特勒成为德国总理，上台执政。 1935年10月 意大利入侵阿比西尼亚（埃塞俄比亚）。 1936年 日本广田弘毅上台组阁，初步建立起法西斯专权。 1936年 西班牙左派政党组织的人民战线上台执政。 1936年5月 意大利攻陷埃塞俄比亚首都亚的斯亚贝巴。 1936年10月 德意签订《柏林协定》，“柏林——罗马轴心”正式形成。 1936年11月 德日两国签订《反共国际协定》，随后意加入。 1937年 日本近卫文麿上台组阁，发动全面侵华战争。 1937年7月7日 中华民族全面抗日战争爆发。 1937年12月 南京大屠杀，遇难者达30万人以上。 1938年春 中国境内台儿庄战役爆发。 1938年3月 德国出兵吞并奥地利。 1938年9月 英法德意签订慕尼黑协定，将苏台德地区割给德国。 1939年3月 德国吞并整个捷克斯洛伐克。 1939年1月26日 佛朗哥占领巴塞罗那，政府逃亡，标志着西班牙独裁统治正式确立。 1939年3月27日 西班牙首都马德里被叛军攻占，共和国灭亡，弗朗哥在西班牙建立了法西斯独裁统治。 1939年8月 苏德在莫斯科签订《苏德互不侵犯条约》。 1939年9月1日 德国闪击波兰，9月3日英法对德宣战，二战全面爆发。 1939年9月底 波兰沦陷。 1939年11月 美国国会通过《中立法》。 1940年4月 德国攻占丹麦、挪威。 1940年5月 德国攻占荷兰、比利时。 1940年5月 丘吉尔出任英国首相。 1940年6月 德国对法国发动总攻，意大利对法宣战。 1940年6月22日 法国投降，北部被德占，南部成立贝当傀儡政府。 1940年7月 德国制定“海狮计划”，入侵英国。 1940年7月 日本提出建立“大东亚共同圈”的侵略计划。 1940年8月下旬 英国开始空袭柏林。空袭一直持续到9月初。 1940年9月 德意日正式结成三国军事同盟，第二年匈牙利、罗马尼亚、保加利亚相继加入。 1940年12月 希特勒发布第21号训练令——“巴巴罗萨计划”。 1941年春 埃塞俄比亚复国。 1941年3月 美国国会通过《租借法》。 1941年6月22日 德国袭击苏联。 1941年8月14日 罗斯福与丘吉尔在北大西洋纽芬兰会晤，发表了《大西洋宪章》。 1941年9月 苏美英在莫斯科签订关于美英以武器供应苏联的第一个协议书。三大国在反法西斯战场上开始联合行动。 1941年10月 日本东条英机组阁。 1941年12月7日 日军偷袭珍珠港。 1941年底 希特勒下达“最后解决犹太人”的命令，600万犹太人惨遭杀害。 1942年元旦 26个国家代表在华盛顿签署了《联合国家宣言》。 1942年4月 美国舰载飞机对日本的东京、横滨等进行轰炸。 1942年6月4日 美日中途岛海战爆发。太平洋战争出现转折。 1942年7月 斯大林会战开始。会战进行了7个月，以德国第六集团军全军覆没而告终。这是苏德战场上的根本性转折。 1942年8月 美军率先在太平洋战场上进行反击（爪岛战役）。 1942年10月 阿拉曼战役爆发。北非战场形势发生转折。 1942年11月 美英联军在北非开展代号为“火炬”的海陆两栖登陆来夹击北非德意军队。 1943年4月 《星期六晚邮报》上发表了《罗斯福的世界蓝图》。 1943年5月 被困于突尼斯的德意军队投降，北非战事胜利结束。 1943年7月 盟军在意大利西西里岛登陆，意大利政变，墨索里尼政府垮台，新政府与美英进行谈判，率先退出战争。 1943年7月 苏德在普罗霍罗夫卡地区发生了二战最大规模的坦克会战，德军损失惨重，从此一蹶不振，失去了苏德战场的主动权。 1943年10月 苏中美英四国共同签署了《关于普通安全的宣言》，第一次宣告建立一个新的普遍的国际组织。 1943年11月 美英中签署《开罗宣言》要求日本归还窃取的中国的领土。 1944年1月起 苏联连续对德军发动10次大规模进攻，基本收复了全部领土。 1944年6月6日 人类战争史上最大的两栖登陆——诺曼底登陆开始，由艾森豪尔指挥。7月25日盟军转入大规模陆上作战。 1944年8月 巴黎光复。 1944年8月至10月 苏中美英在美国华盛顿的敦巴顿橡树园召开会议，正式将未来的国家机构命名为“联合国”。 1945年初 日本的海军主力基本被消灭。 1945年2月 苏美英在苏联雅尔塔召开雅尔塔会议，并进一步确立“五大国一致原则”。 1945年春 美英盟军强渡莱茵河，在鲁尔地区围歼西线德军主力。 1945年4月 美苏军队在易北会师，苏军对柏林发动总攻。 1945年4月 美军先后攻占硫磺岛和冲绳岛，从南面切断日本本土与外界联系。 1945年4月30日 苏军攻占柏林，希特勒自杀身亡。 1945年5月8日 德国签署无条件投降书，欧洲战争结束。 1945年6月26日 51个国家的代表在美国的旧金山签署了《联合国宪章》。 1945年7月 苏美英三国首脑会晤于柏林附近的波茨坦发表了《波茨坦公告》。 1945年8月6、9日 美国在日本的广岛和长崎投下原子弹，造成30万人死亡。 1945年8月8日 苏联对日宣战，在中国东北对日本关东军予以毁灭性打击。 1945年8月15日 日本宣布无条件投降。 1945年9月2日 日本正式签署无条件投降书。反法西斯的第二次世界大战终于胜利结束。 1945年10月24日 联合国宪章正式生效，联合国总部设在纽约。 1945年11月 欧洲国际军事法庭在纽伦堡对纳粹德国的首要战犯和犯罪组织进行长达十个月的审判。 1946年3月 丘吉尔在美国密苏里州的富尔敦发表“铁幕演说”。 1946年3月22日 英承认外约旦独立，5月改国名为外约旦哈希姆王国。 1946年5月 远东国际军事法庭在东京正式开幕。这是人类历史上规模最大的一次国际审判。东条英机等7人被判处绞刑：16人被判无期徒刑：2人被判有期徒刑。 1946年10月1日 欧洲国际军事法庭判处戈林等12人绞刑：3人无期徒刑：4人有期徒刑。纳粹党的领导机构、秘密警察（盖世太保）、党卫军等为犯罪组织。 1947年2月 杜鲁门主义提出，宣告了美国在全球范围内的扩张，也是美国开始对苏联发动冷战的标志。 1947年6月 美国国务卿马歇尔提出“欧洲复兴计划”，史称“马歇尔计划”。 1947年6月 英国驻印度总督蒙巴顿制定出“蒙巴顿方案”。 1947年7月 英国议会通过《印度独立法案》。 1947年8月 印度和巴基斯坦正式实行分治。 1947年9月 苏波南保罗匈捷法意9国共产党和工人党代表举行会议，会议决定成立情报局。 1947年10月 印巴双方为争夺克什米尔地区的所有权，进行了第一次印巴战争。 1947年秋 克什米尔地区印度教徒和穆斯林爆发大规模流血冲突。 1947年11月 联合国大会表决通过犹太人在巴勒斯坦复国的决议。 1948年5月14日 英国结束巴勒斯坦委任统治，以色列国宣告成立。 1948年5月15日 埃及等5国组成阿拉伯联军，对以色列不宣而战，“巴勒斯坦战争”（即“第一次中东战争”）爆发。 1948年 第一次中东战争爆发后，联合国在巴勒斯坦建立停战监督组织，这是联合国第一次维和行动。 1948年5月 朝鲜南部建立起以李承晚为总统的大韩民国。 1948年9月 朝鲜北部建立起以金日正为国家元首的朝鲜民主主义人民共和国。 1948年6月 美英法宣布在德国西占区实行单方币制改革。随后苏在东占区实行单方币制改革，史称“第一次柏林危机”。 1948年12月 联合国大会通过了《世界人权宣言》。 1949年1月 苏保匈波罗捷6国代表在莫斯科建立经济互助委员会。 1949年1月 印巴双方宣布在克什米尔停火，双方确定了停火线。 1949年4月 美英法意等12国外长在华盛顿签订《北大西洋公约》。 1949年7月 第一次中东战争停战协议签订。 1949年4月 第一届世界保卫和平大会在巴黎、布拉格同时进行，有72个国家、12个国家组织派代表参加。 1949年9月 联邦德国建立，定都波恩。 1949年10月 民主德国建立，定都柏林。 1950年2月 中苏缔结了《中苏友好互助条约》，以苏联为首的社会主义阵营最终形成。 1950年3月 在斯德哥尔摩召开会议的“世界保卫和平委员会”发表了“斯德哥尔摩”宣言，要求“无条件禁止原子武器”，有5亿多人在宣言上签字。 1950年6月25日 朝鲜内战爆发。 1950年7月 联合国安理会决定组成“联合国军”干涉朝鲜战争，麦克阿瑟任总司令。 1950年9月15日 “联合国军”突然在朝鲜中部的仁川登陆。 1950年9月28日 朝鲜战争中美军占领汉城。 1950年10月 朝鲜战争中美军占领平壤。 1950年10月19日 中国志愿军入朝作战，彭德怀任总指挥。 1950年11月 第二届世界保卫和平大会召开，世界和平理事会成立。 1950年1月6日 尼赫鲁任印度共和国第一任总理 1951年7月 朝鲜内战中交战双方进行停战谈判。 1952年7月 以纳赛尔为首的一批军人推翻埃及封建王朝并于第二年建立共和国。 20世纪50年代前期 美国在亚洲建立起“东南亚条约组织”和“巴格达条约组织”。 1953年3月 斯大林逝世。 1953年7月27日 朝韩停战协议最后签字。 1954年 越南分为两部分，北部为以胡志明为首的越南民主共和国，南部为傀儡越南共和国。 1954年圣诞节前夕 罗素发表了题为《人类的危机》著名演说。 1955年5月 苏保匈波罗捷阿民在华沙签订《友好互助条约》，通称《华沙条约》，成立华约组织，总部设在莫斯科。 1955年7月 《罗素——爱因斯坦宣言》发表。 1956年 埃及宣布将由英法控制的苏伊士运河公司收归国有。 1956年10月底 以色列军队侵入埃及领土，苏伊士运河战争（即“第二次中东战争”）爆发。 1956年 第二次中东战争爆发期间，联合国向中东地区派出第一支维和部队。 1956年12月 英法联军撤出埃及。 1953年7月 以色列军队撤出埃及。 1957年7月 苏成功发射世界上第一颗人造卫星。 20世纪50年代末 持续到60年代初，越南进行“特种战争”。 1959年1月 古巴人民在卡斯特罗的领导下，推翻了美国扶持的反动政府，建立了革命政府。 1959年1月 尼克松入主白宫。 1959年 亚西尔·阿拉法特组织加沙地区的巴勒斯坦青年成立了“巴勒斯坦民族解放运动”（简称“法塔赫”），并与其他组织联合成了“巴勒斯坦解放组织”。 1959年9月 赫鲁晓夫与美总统艾林豪威尔在马里兰州的戴维营举行会谈，大力宣扬“戴维营精神”。 1960年5月 苏联导弹击落一架入侵的美国U-2间谍飞机，生擒飞行员。 1961年8月 苏联修筑“柏林墙”。 1962年10月 古巴导弹危机。 1963年、1968年 美苏先后签订禁止核实验条约和防止核扩散条约。 1964年8月 美驱逐舰“马多科斯号”进入越南领海挑起越南战争。美国对越南北部进行大规模轰炸。 1965年 美国将在越南南部进行的“特种战争”扩大为整个越南的局部战争。 1965年 美国国内25万人参加“向华盛顿和平进军”反战游行。 1965年8月 巴基斯坦军队发动进攻，印巴双方任何一方都没有取得明显胜利，战斗进行到9月下旬。 1966年1月 印度总理和巴勒斯坦领导人在塔什干签署宣言，规定“互不干涉内政”。 1967年4月 以色列与叙利亚发生武装冲突。 1967年6月5日 以出动大批飞机、坦克对阿拉伯国家发动了“闪击战”，在6天内一举攻占了加沙地带和整个西奈半岛，并攻入苏伊士运河区，之后又抢占了通往叙利亚首都大马士革的公路。战争仅6天就结束了，史称“六日战争”。这就是第三次中东战争。 1968年1月 南越人民武装发动“新春攻势”，表明越南军民开始掌握战场主动权。 1969年6月 美国总统尼克松宣布实行“战争越南化”，美国从南越撤军。 20世纪70年代 美国将侵略战火扩大到老挝和柬埔寨境内。 20世纪70年代 苏联开始推行“缓和战略”。 1971年11月 印军大举进入东巴基斯坦，组织了“孟加拉解放军”与西巴基斯坦抗衡。 1971年12月 印军在克什米尔地区向巴基斯坦军队发动进攻，第三次印巴战争全面爆发。12月双方宣布停火。 1972年1月 在印度的支持下一个新的国家——孟加拉宣告成立。 1972年7月1日 美苏签订《美苏关于限制进攻性战略武器的某些措施的临时协约》（即《第一阶段战略武器协议》，规定双方战略性核导弹数量冻结在1972年7月1日的水平。 1973年1月 美越签署《关于在越南结束战争恢复和平的协议》，双方完全停止敌对活动。 1973年、1975年 召开了由东西方国家共同参加的“中欧裁军会议”和“欧洲安全与合 作会议”。 1973年10月 埃及和叙利亚同时在东西两线进攻以色列，打响了十月战争，即“第四次中东战争”。 1973年10月中旬 埃以在苏伊士运河东岸展开了一场坦克战，双方共派出1800多辆坦克和装甲车进行了数小时的激战，埃军损失惨重，战场形势发生逆转。 1973年10月下旬 第四次中东战争交战双方实现了停火，第四次中东战争宣告结束。 1975年春 美国挟持的傀儡政府土崩瓦解，越南实现了统一。 1975年 伊拉克和伊朗经过谈判，伊朗允诺把大约300平方千米的土地归伊拉克，但一直没有兑现。 1978年 埃及、以色列在美国签署了“戴维营协议”，双方实现了和解。两年后埃以建交。 1978年 联合国召开了第一届裁军特别联大，这是联合国专门为审议裁军问题召开的规模最大、最有代表性的一次会议。 1980年4月 两伊边境地区开始有冲击，双方关系急剧紧张起来。 1980年9月 伊拉克对伊朗一系列目标发动大规模进攻，两伊战争爆发。 1981年 里根出任美国总统。 1981年 联合国大会宣布9月的大会开幕之日“正式定为世界和平日”。 1983年3月 里根提出“战略防御计划”（即“星球大战计划”）。 1982年7月 伊朗军队突破伊拉克防线，进入伊拉克境内。 1982年 第37届联合国大会通过决议，确定1986年为“世界和平年”。 1985年3月 戈尔巴乔夫上台执政，推行改革，提出“新思维”，强调“人类生存高于一切”、“核战争不会有胜利者”。 1985年10月 联合国成员国一致通过《国际和平宣言》。 1987年 里根与戈尔巴乔夫签订“中导条约”，这是自出现核武器以来达成的第一个销毁部分核武器军备的协议。 1987年7月 联合国安理会第一次强制性通过决议，要求两伊战争双方立即停火。 1988年8月20日 伊朗接受联合国决议，两伊战争实现停火。 1989年 东欧剧变。 1989年 中国开始参加联合国维和行动。 1989年11月 民主德国政府宣布开放东西柏林边界，柏林墙开始拆除。 1990年3月 由反对党组成的“德国联盟”在东德大选中获胜，重组内阁。 1990年8月2日 伊拉克发动对科威特的战争。8月8日，伊拉克占领科威特。 1990年8月 美国实施“沙漠盾牌”计划，以联合国的名义，组成一支由美、英、法、加、澳等8个国家组成的多国部队进驻海湾，以阻止伊拉克进一步扩大侵略。 1990年10月3日 民主德国正式并入联邦德国。德国的重新统一，成为冷战结束的重要标志之一。 1990年11月29日 联合国安理会通过第678号决议，要求伊拉克在1991年1月15日或以前退出科威特。 1991年1月17日 多国部队对伊拉克境内和伊军在科威特的军事目标实施大规模空袭，美国总统布什宣布开始解放科威特的“沙漠风暴”行动。 1991年2月24日 多国部队在近500千米的宽大正面上，兵分三路向伊拉克军队发动代号为“沙漠军刀”的地面攻势，伊拉克军队全线溃退。 1991年2月27日 伊拉克无条件接受安理会决议，各国部队停止对伊拉克的进攻。 1991年12月 苏联的15个加盟国在阿拉木图签署《建立独立国家联合体协议》。 1991年12月25日 戈尔巴乔夫宣布辞去苏联总统职务，两极格局宣告结束。 1992年4月 波斯尼亚和黑塞哥维那（简称“波黑”）三个主要民族围绕波黑前途和领土划分等问题而进行战争，战争进行到1995年12月，史称“波黑战争”。 1993年9月 巴解组织与以色列在华盛顿签署了《关于在被占领土上巴勒斯坦临时自治政府安排的原则宣言》。 1995年11月初 以色列总理拉宾在特拉维夫的一次和平集会上遇刺身亡。 1998年2月 海湾地区再次出现战争危机，联合国秘书长安南亲赴伊拉克斡旋，最终化解了可能爆发的又一次海湾战争。 1998年12月 巴以双方达成临时和平约定。 2000年1月 联合国大会决定从2002年起，每年9月21日为纪念国际和平日。 2000年9月6日至8日 纽约联合国总部举行联合国千年首脑会议。 推荐读物《国际条约集1872-1916》 【美】布里特等 《20世纪史》 【美】保罗·肯尼迪 《大国的兴衰》 【美】斯塔夫里阿诺斯 《全球通史》 【中】吴于廑 齐世荣 《世界史 现代史编》","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://starmoon.space/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"历史","slug":"历史","permalink":"https://starmoon.space/tags/%E5%8E%86%E5%8F%B2/"}]}],"categories":[{"name":"机器学习","slug":"机器学习","permalink":"https://starmoon.space/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"论文写作","slug":"论文写作","permalink":"https://starmoon.space/categories/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"},{"name":"编程语言","slug":"编程语言","permalink":"https://starmoon.space/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"杂谈","slug":"杂谈","permalink":"https://starmoon.space/categories/%E6%9D%82%E8%B0%88/"}],"tags":[{"name":"机器学习会议","slug":"机器学习会议","permalink":"https://starmoon.space/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BC%9A%E8%AE%AE/"},{"name":"论文写作","slug":"论文写作","permalink":"https://starmoon.space/tags/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C/"},{"name":"Python","slug":"Python","permalink":"https://starmoon.space/tags/Python/"},{"name":"爬虫","slug":"爬虫","permalink":"https://starmoon.space/tags/%E7%88%AC%E8%99%AB/"},{"name":"LaTeX","slug":"LaTeX","permalink":"https://starmoon.space/tags/LaTeX/"},{"name":"机器学习库","slug":"机器学习库","permalink":"https://starmoon.space/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%BA%93/"},{"name":"诗歌","slug":"诗歌","permalink":"https://starmoon.space/tags/%E8%AF%97%E6%AD%8C/"},{"name":"历史","slug":"历史","permalink":"https://starmoon.space/tags/%E5%8E%86%E5%8F%B2/"}]}